#!/usr/bin/with-contenv bash

# make our folders
mkdir -p \
    /config/{nginx/site-confs,keys} \
    /run \
    /var/lib/nginx/tmp/client_body \
    /var/tmp/nginx

# generate keys (maybe)
if [[ $ENABLE_LETSENCRYPT -eq 1 ]]; then
    if [[ ! -f /config/acme.sh/acme.sh ]]; then
        mkdir /config/acme.sh
        pushd /opt
        sh ./acme.sh --install --home /config/acme.sh --accountemail $LETSENCRYPT_EMAIL
        popd
    fi
    if [[ ! -f /etc/nginx/acme/$LETSENCRYPT_DOMAIN/fullchain.pem ]]; then
        STAGING=""
        if [[ $LETSENCRYPT_USE_STAGING -eq 1 ]]; then
            STAGING="--staging"
        fi
        # TODO: move away from standalone mode to webroot mode.
        if ! /config/acme.sh/acme.sh \
                $STAGING \
                --issue \
                --standalone \
                --pre-hook "if [[ -f /var/run/s6/services/nginx ]]; then s6-svc -d /var/run/s6/services/nginx; fi" \
                --post-hook "if [[ -f /var/run/s6/services/nginx ]]; then s6-svc -u /var/run/s6/services/nginx; fi" \
                -d $LETSENCRYPT_DOMAIN ; then
            echo "Failed to obtain a certificate from the Let's Encrypt CA."
            # this tries to get the user's attention and to spare the
            # authority's rate limit:
            sleep 15
            echo "Exiting."
            exit 1
        fi
        mkdir -p /etc/nginx/acme/$LETSENCRYPT_DOMAIN
        if ! /config/acme.sh/acme.sh \
                --install-cert -d $LETSENCRYPT_DOMAIN \
                --key-file /etc/nginx/acme/$LETSENCRYPT_DOMAIN/key.pem  \
                --fullchain-file /etc/nginx/acme/$LETSENCRYPT_DOMAIN/fullchain.pem ; then
            echo "Failed to install certificate."
            # this tries to get the user's attention and to spare the
            # authority's rate limit:
            sleep 15
            echo "Exiting."
            exit 1
        fi
    fi
else
    # use self-signed certs
    if [[ -f /config/keys/cert.key && -f /config/keys/cert.crt ]]; then
        echo "using keys found in /config/keys"
    else
        echo "generating self-signed keys in /config/keys, you can replace these with your own keys if required"
        SUBJECT="/C=DE/ST=NRW/L=Moers/O=example.org/OU=Excalidraw Server/CN=*"
        openssl req -new -x509 -days 3650 -nodes -out /config/keys/cert.crt -keyout /config/keys/cert.key -subj "$SUBJECT"
    fi
fi

# copy config files
tpl /defaults/nginx.conf > /config/nginx/nginx.conf

if [[ ! -f /config/nginx/excalidraw.conf ]]; then
    tpl /defaults/excalidraw.conf > /config/nginx/excalidraw.conf
fi

if [[ ! -f /config/nginx/ssl.conf ]]; then
    tpl /defaults/ssl.conf > /config/nginx/ssl.conf
fi

if [[ ! -f /config/nginx/site-confs/default ]]; then
    tpl /defaults/default > /config/nginx/site-confs/default
fi

